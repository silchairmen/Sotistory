import org.springframework.boot.gradle.plugin.ResolveMainClassName

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.soti'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

//lombok 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.testng:testng:7.1.0'
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//DB
	implementation("org.mariadb.jdbc:mariadb-java-client:2.1.2")

	//devtools
	implementation 'org.springframework.boot:spring-boot-devtools'

	//layout dep
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//springSecurity
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//Valied
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Spring-Security-Test
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

//리엑트 설정
def reactAppDir = "$projectDir/frontend-app"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "copyReactFile"
}

task installReact(type: Exec) {
	workingDir "$reactAppDir"
	inputs.dir "$reactAppDir"
	group = BasePlugin.BUILD_GROUP

	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "run-script", "build"
	} else{
		commandLine "npm", "run-script", "build"
	}
}

task copyReactFile(type: Copy){
	dependsOn "buildReact"
	from "$reactAppDir/build"
	into "$buildDir/resources/main/static"
}

bootJar {

}

tasks.named('test') {
	useJUnitPlatform()
}
